### YamlMime:ManagedReference
items:
- uid: RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension
  commentId: T:RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension
  id: ILeaderboardExtension
  parent: RocketshiftStudio.Trophy.Extensions
  children:
  - RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension.PostAsync(RocketshiftStudio.Trophy.LeaderboardData[])
  langs:
  - csharp
  - vb
  name: ILeaderboardExtension
  nameWithType: ILeaderboardExtension
  fullName: RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension
  type: Interface
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Leaderboard/ILeaderboardExtension.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: ILeaderboardExtension
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Leaderboard/ILeaderboardExtension.cs
    startLine: 4
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy.Extensions
  syntax:
    content: 'public interface ILeaderboardExtension : ISpecialPermissionExtension, IExtension'
    content.vb: Public Interface ILeaderboardExtension Inherits ISpecialPermissionExtension, IExtension
  inheritedMembers:
  - RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension.IsAuthorized
- uid: RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension.PostAsync(RocketshiftStudio.Trophy.LeaderboardData[])
  commentId: M:RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension.PostAsync(RocketshiftStudio.Trophy.LeaderboardData[])
  id: PostAsync(RocketshiftStudio.Trophy.LeaderboardData[])
  parent: RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension
  langs:
  - csharp
  - vb
  name: PostAsync(LeaderboardData[])
  nameWithType: ILeaderboardExtension.PostAsync(LeaderboardData[])
  fullName: RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension.PostAsync(RocketshiftStudio.Trophy.LeaderboardData[])
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Leaderboard/ILeaderboardExtension.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: PostAsync
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Leaderboard/ILeaderboardExtension.cs
    startLine: 11
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy.Extensions
  summary: Invoked on leaderboard post request call from <xref href="RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync(RocketshiftStudio.Trophy.LeaderboardRequest%5b%5d)" data-throw-if-not-resolved="false"></xref> or <xref href="RocketshiftStudio.Trophy.Trophy.PostToLeaderboard(RocketshiftStudio.Trophy.LeaderboardRequest%5b%5d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: Task PostAsync(LeaderboardData[] leaderboardData)
    parameters:
    - id: leaderboardData
      type: RocketshiftStudio.Trophy.LeaderboardData[]
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: Asynchronous operation
    content.vb: Function PostAsync(leaderboardData As LeaderboardData()) As Task
  overload: RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension.PostAsync*
  nameWithType.vb: ILeaderboardExtension.PostAsync(LeaderboardData())
  fullName.vb: RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension.PostAsync(RocketshiftStudio.Trophy.LeaderboardData())
  name.vb: PostAsync(LeaderboardData())
references:
- uid: RocketshiftStudio.Trophy.Extensions
  commentId: N:RocketshiftStudio.Trophy.Extensions
  href: RocketshiftStudio.html
  name: RocketshiftStudio.Trophy.Extensions
  nameWithType: RocketshiftStudio.Trophy.Extensions
  fullName: RocketshiftStudio.Trophy.Extensions
  spec.csharp:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.html
  - name: .
  - uid: RocketshiftStudio.Trophy.Extensions
    name: Extensions
    href: RocketshiftStudio.Trophy.Extensions.html
  spec.vb:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.html
  - name: .
  - uid: RocketshiftStudio.Trophy.Extensions
    name: Extensions
    href: RocketshiftStudio.Trophy.Extensions.html
- uid: RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension.IsAuthorized
  commentId: M:RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension.IsAuthorized
  parent: RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension
  href: RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension.html#RocketshiftStudio_Trophy_Extensions_ISpecialPermissionExtension_IsAuthorized
  name: IsAuthorized()
  nameWithType: ISpecialPermissionExtension.IsAuthorized()
  fullName: RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension.IsAuthorized()
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension.IsAuthorized
    name: IsAuthorized
    href: RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension.html#RocketshiftStudio_Trophy_Extensions_ISpecialPermissionExtension_IsAuthorized
  - name: (
  - name: )
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension.IsAuthorized
    name: IsAuthorized
    href: RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension.html#RocketshiftStudio_Trophy_Extensions_ISpecialPermissionExtension_IsAuthorized
  - name: (
  - name: )
- uid: RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension
  commentId: T:RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension
  parent: RocketshiftStudio.Trophy.Extensions
  href: RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension.html
  name: ISpecialPermissionExtension
  nameWithType: ISpecialPermissionExtension
  fullName: RocketshiftStudio.Trophy.Extensions.ISpecialPermissionExtension
- uid: RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync(RocketshiftStudio.Trophy.LeaderboardRequest[])
  commentId: M:RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync(RocketshiftStudio.Trophy.LeaderboardRequest[])
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_PostToLeaderboardAsync_RocketshiftStudio_Trophy_LeaderboardRequest___
  name: PostToLeaderboardAsync(LeaderboardRequest[])
  nameWithType: Trophy.PostToLeaderboardAsync(LeaderboardRequest[])
  fullName: RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync(RocketshiftStudio.Trophy.LeaderboardRequest[])
  nameWithType.vb: Trophy.PostToLeaderboardAsync(LeaderboardRequest())
  fullName.vb: RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync(RocketshiftStudio.Trophy.LeaderboardRequest())
  name.vb: PostToLeaderboardAsync(LeaderboardRequest())
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync(RocketshiftStudio.Trophy.LeaderboardRequest[])
    name: PostToLeaderboardAsync
    href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_PostToLeaderboardAsync_RocketshiftStudio_Trophy_LeaderboardRequest___
  - name: (
  - uid: RocketshiftStudio.Trophy.LeaderboardRequest
    name: LeaderboardRequest
    href: RocketshiftStudio.Trophy.LeaderboardRequest.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync(RocketshiftStudio.Trophy.LeaderboardRequest[])
    name: PostToLeaderboardAsync
    href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_PostToLeaderboardAsync_RocketshiftStudio_Trophy_LeaderboardRequest___
  - name: (
  - uid: RocketshiftStudio.Trophy.LeaderboardRequest
    name: LeaderboardRequest
    href: RocketshiftStudio.Trophy.LeaderboardRequest.html
  - name: (
  - name: )
  - name: )
- uid: RocketshiftStudio.Trophy.Trophy.PostToLeaderboard(RocketshiftStudio.Trophy.LeaderboardRequest[])
  commentId: M:RocketshiftStudio.Trophy.Trophy.PostToLeaderboard(RocketshiftStudio.Trophy.LeaderboardRequest[])
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_PostToLeaderboard_RocketshiftStudio_Trophy_LeaderboardRequest___
  name: PostToLeaderboard(LeaderboardRequest[])
  nameWithType: Trophy.PostToLeaderboard(LeaderboardRequest[])
  fullName: RocketshiftStudio.Trophy.Trophy.PostToLeaderboard(RocketshiftStudio.Trophy.LeaderboardRequest[])
  nameWithType.vb: Trophy.PostToLeaderboard(LeaderboardRequest())
  fullName.vb: RocketshiftStudio.Trophy.Trophy.PostToLeaderboard(RocketshiftStudio.Trophy.LeaderboardRequest())
  name.vb: PostToLeaderboard(LeaderboardRequest())
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Trophy.PostToLeaderboard(RocketshiftStudio.Trophy.LeaderboardRequest[])
    name: PostToLeaderboard
    href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_PostToLeaderboard_RocketshiftStudio_Trophy_LeaderboardRequest___
  - name: (
  - uid: RocketshiftStudio.Trophy.LeaderboardRequest
    name: LeaderboardRequest
    href: RocketshiftStudio.Trophy.LeaderboardRequest.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Trophy.PostToLeaderboard(RocketshiftStudio.Trophy.LeaderboardRequest[])
    name: PostToLeaderboard
    href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_PostToLeaderboard_RocketshiftStudio_Trophy_LeaderboardRequest___
  - name: (
  - uid: RocketshiftStudio.Trophy.LeaderboardRequest
    name: LeaderboardRequest
    href: RocketshiftStudio.Trophy.LeaderboardRequest.html
  - name: (
  - name: )
  - name: )
- uid: RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension.PostAsync*
  commentId: Overload:RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension.PostAsync
  href: RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension.html#RocketshiftStudio_Trophy_Extensions_ILeaderboardExtension_PostAsync_RocketshiftStudio_Trophy_LeaderboardData___
  name: PostAsync
  nameWithType: ILeaderboardExtension.PostAsync
  fullName: RocketshiftStudio.Trophy.Extensions.ILeaderboardExtension.PostAsync
- uid: RocketshiftStudio.Trophy.LeaderboardData[]
  isExternal: true
  href: RocketshiftStudio.Trophy.LeaderboardData.html
  name: LeaderboardData[]
  nameWithType: LeaderboardData[]
  fullName: RocketshiftStudio.Trophy.LeaderboardData[]
  nameWithType.vb: LeaderboardData()
  fullName.vb: RocketshiftStudio.Trophy.LeaderboardData()
  name.vb: LeaderboardData()
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.LeaderboardData
    name: LeaderboardData
    href: RocketshiftStudio.Trophy.LeaderboardData.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: RocketshiftStudio.Trophy.LeaderboardData
    name: LeaderboardData
    href: RocketshiftStudio.Trophy.LeaderboardData.html
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
