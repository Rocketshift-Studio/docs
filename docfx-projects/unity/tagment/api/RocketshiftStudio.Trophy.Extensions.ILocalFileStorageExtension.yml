### YamlMime:ManagedReference
items:
- uid: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension
  commentId: T:RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension
  id: ILocalFileStorageExtension
  parent: RocketshiftStudio.Trophy.Extensions
  children:
  - RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.FileExtension
  - RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.SaveDirectory
  langs:
  - csharp
  - vb
  name: ILocalFileStorageExtension
  nameWithType: ILocalFileStorageExtension
  fullName: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension
  type: Interface
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Storage/ILocalFileStorageExtension.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: ILocalFileStorageExtension
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Storage/ILocalFileStorageExtension.cs
    startLine: 5
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy.Extensions
  summary: To allow local storage based save/load operations on score values using files
  example: []
  syntax:
    content: 'public interface ILocalFileStorageExtension : ILocalStorageExtension, IStorageExtension, IExtension'
    content.vb: Public Interface ILocalFileStorageExtension Inherits ILocalStorageExtension, IStorageExtension, IExtension
  inheritedMembers:
  - RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadAsync(System.Collections.Generic.IList{System.String})
  - RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveAsync(System.Collections.Generic.IList{RocketshiftStudio.Trophy.ScoreData})
  - RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteAsync(System.Collections.Generic.IList{System.String})
- uid: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.FileExtension
  commentId: P:RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.FileExtension
  id: FileExtension
  parent: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension
  langs:
  - csharp
  - vb
  name: FileExtension
  nameWithType: ILocalFileStorageExtension.FileExtension
  fullName: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.FileExtension
  type: Property
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Storage/ILocalFileStorageExtension.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: FileExtension
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Storage/ILocalFileStorageExtension.cs
    startLine: 7
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy.Extensions
  syntax:
    content: string FileExtension { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property FileExtension As String
  overload: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.FileExtension*
- uid: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.SaveDirectory
  commentId: P:RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.SaveDirectory
  id: SaveDirectory
  parent: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension
  langs:
  - csharp
  - vb
  name: SaveDirectory
  nameWithType: ILocalFileStorageExtension.SaveDirectory
  fullName: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.SaveDirectory
  type: Property
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Storage/ILocalFileStorageExtension.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: SaveDirectory
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Storage/ILocalFileStorageExtension.cs
    startLine: 8
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy.Extensions
  syntax:
    content: string SaveDirectory { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property SaveDirectory As String
  overload: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.SaveDirectory*
references:
- uid: RocketshiftStudio.Trophy.Extensions
  commentId: N:RocketshiftStudio.Trophy.Extensions
  href: RocketshiftStudio.html
  name: RocketshiftStudio.Trophy.Extensions
  nameWithType: RocketshiftStudio.Trophy.Extensions
  fullName: RocketshiftStudio.Trophy.Extensions
  spec.csharp:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.html
  - name: .
  - uid: RocketshiftStudio.Trophy.Extensions
    name: Extensions
    href: RocketshiftStudio.Trophy.Extensions.html
  spec.vb:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.html
  - name: .
  - uid: RocketshiftStudio.Trophy.Extensions
    name: Extensions
    href: RocketshiftStudio.Trophy.Extensions.html
- uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadAsync(System.Collections.Generic.IList{System.String})
  commentId: M:RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadAsync(System.Collections.Generic.IList{System.String})
  parent: RocketshiftStudio.Trophy.Extensions.IStorageExtension
  isExternal: true
  href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_LoadAsync_System_Collections_Generic_IList_System_String__
  name: LoadAsync(IList<string>)
  nameWithType: IStorageExtension.LoadAsync(IList<string>)
  fullName: RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadAsync(System.Collections.Generic.IList<string>)
  nameWithType.vb: IStorageExtension.LoadAsync(IList(Of String))
  fullName.vb: RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadAsync(System.Collections.Generic.IList(Of String))
  name.vb: LoadAsync(IList(Of String))
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadAsync(System.Collections.Generic.IList{System.String})
    name: LoadAsync
    href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_LoadAsync_System_Collections_Generic_IList_System_String__
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadAsync(System.Collections.Generic.IList{System.String})
    name: LoadAsync
    href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_LoadAsync_System_Collections_Generic_IList_System_String__
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
  - name: )
- uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveAsync(System.Collections.Generic.IList{RocketshiftStudio.Trophy.ScoreData})
  commentId: M:RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveAsync(System.Collections.Generic.IList{RocketshiftStudio.Trophy.ScoreData})
  parent: RocketshiftStudio.Trophy.Extensions.IStorageExtension
  isExternal: true
  href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_SaveAsync_System_Collections_Generic_IList_RocketshiftStudio_Trophy_ScoreData__
  name: SaveAsync(IList<ScoreData>)
  nameWithType: IStorageExtension.SaveAsync(IList<ScoreData>)
  fullName: RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveAsync(System.Collections.Generic.IList<RocketshiftStudio.Trophy.ScoreData>)
  nameWithType.vb: IStorageExtension.SaveAsync(IList(Of ScoreData))
  fullName.vb: RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveAsync(System.Collections.Generic.IList(Of RocketshiftStudio.Trophy.ScoreData))
  name.vb: SaveAsync(IList(Of ScoreData))
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveAsync(System.Collections.Generic.IList{RocketshiftStudio.Trophy.ScoreData})
    name: SaveAsync
    href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_SaveAsync_System_Collections_Generic_IList_RocketshiftStudio_Trophy_ScoreData__
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - uid: RocketshiftStudio.Trophy.ScoreData
    name: ScoreData
    href: RocketshiftStudio.Trophy.ScoreData.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveAsync(System.Collections.Generic.IList{RocketshiftStudio.Trophy.ScoreData})
    name: SaveAsync
    href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_SaveAsync_System_Collections_Generic_IList_RocketshiftStudio_Trophy_ScoreData__
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: RocketshiftStudio.Trophy.ScoreData
    name: ScoreData
    href: RocketshiftStudio.Trophy.ScoreData.html
  - name: )
  - name: )
- uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteAsync(System.Collections.Generic.IList{System.String})
  commentId: M:RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteAsync(System.Collections.Generic.IList{System.String})
  parent: RocketshiftStudio.Trophy.Extensions.IStorageExtension
  isExternal: true
  href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_DeleteAsync_System_Collections_Generic_IList_System_String__
  name: DeleteAsync(IList<string>)
  nameWithType: IStorageExtension.DeleteAsync(IList<string>)
  fullName: RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteAsync(System.Collections.Generic.IList<string>)
  nameWithType.vb: IStorageExtension.DeleteAsync(IList(Of String))
  fullName.vb: RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteAsync(System.Collections.Generic.IList(Of String))
  name.vb: DeleteAsync(IList(Of String))
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteAsync(System.Collections.Generic.IList{System.String})
    name: DeleteAsync
    href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_DeleteAsync_System_Collections_Generic_IList_System_String__
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteAsync(System.Collections.Generic.IList{System.String})
    name: DeleteAsync
    href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_DeleteAsync_System_Collections_Generic_IList_System_String__
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
  - name: )
- uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension
  commentId: T:RocketshiftStudio.Trophy.Extensions.IStorageExtension
  parent: RocketshiftStudio.Trophy.Extensions
  href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html
  name: IStorageExtension
  nameWithType: IStorageExtension
  fullName: RocketshiftStudio.Trophy.Extensions.IStorageExtension
- uid: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.FileExtension*
  commentId: Overload:RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.FileExtension
  href: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.html#RocketshiftStudio_Trophy_Extensions_ILocalFileStorageExtension_FileExtension
  name: FileExtension
  nameWithType: ILocalFileStorageExtension.FileExtension
  fullName: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.FileExtension
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.SaveDirectory*
  commentId: Overload:RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.SaveDirectory
  href: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.html#RocketshiftStudio_Trophy_Extensions_ILocalFileStorageExtension_SaveDirectory
  name: SaveDirectory
  nameWithType: ILocalFileStorageExtension.SaveDirectory
  fullName: RocketshiftStudio.Trophy.Extensions.ILocalFileStorageExtension.SaveDirectory
